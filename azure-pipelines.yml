# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

variables:
  - group: nugetfeed
  - name: isMain
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

steps:
- task: UseDotNet@2
  displayName: Install .NET 9
  inputs:
    packageType: 'sdk'
    version: '9.x'

- task: UseDotNet@2
  displayName: Install .NET 8
  inputs:
    packageType: 'sdk'
    version: '8.x'

- task: DotNetCoreCLI@2
  displayName: Build and test code
  inputs:
    command: 'test'
    projects: '**/*Tests.csproj'
    testRunTitle: 'Test .NET'
    

- task: DotNetCoreCLI@2
  condition: and(succeeded(), eq(variables.isMain, true))
  displayName: Pack project for publish
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '2'
    minorVersion: '0'
    patchVersion: '0'
    
- task: DotNetCoreCLI@2
  displayName: Push to private ADO nuget feed
  condition: and(succeeded(), eq(variables.isMain, true))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '$(FeedId)'
  
- task: DotNetCoreCLI@2
  displayName: Push to Github feed
  condition: and(succeeded(), eq(variables.isMain, true), ne(variables.GithubApiConnection, ''))
  inputs:
    command: 'custom'
    custom: nuget
    arguments: > 
      push "$(Build.ArtifactStagingDirectory)/*.nupkg"
      -s "$(GithubPackageServerUrl)"
      -k "$(GithubToken)"

- task: DotNetCoreCLI@2
  displayName: Push to Nuget feed
  condition: and(succeeded(), eq(variables.isMain, true), ne(variables.NugetApiToken, ''))
  inputs:
    command: 'custom'
    custom: nuget
    arguments: >
      push "$(Build.ArtifactStagingDirectory)/*.nupkg"
      -s "https://api.nuget.org/v3/index.json"
      -k "$(NugetApiToken)"